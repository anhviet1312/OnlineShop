@model ShopOnline.Models.ViewModels.ViewProductModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    #editModal .modal-dialog {
        max-width: 1200px;
    }

    #editModal .form-input {
        width: 300px;
        margin-left: 50px;
    }

    .product-paging .pagination{
        justify-content: end;
    }

</style>
<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-striped table-hover" style="table-layout: fixed">
    <thead>
        <tr>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Name)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Alias)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Image)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].MoreImages)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Price)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].OriginalPrice)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].PromotionPrice)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Description)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Content)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].HomeFlag)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].HotFlag)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].ViewCount)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Tags)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].Quantity)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].ProductCategory)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].CreatedDate)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].CreatedBy)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].UpdatedDate)
            </th>
            <th class="ellipsis">
                @Html.DisplayNameFor(model => model.Products[0].UpdatedBy)
            </th>
            <th class="ellipsis"></th>
            <th class="ellipsis"></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Products) {
        <tr>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Alias)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Image)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.MoreImages)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.OriginalPrice)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.PromotionPrice)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Content)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.HomeFlag)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.HotFlag)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.ViewCount)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Tags)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.ProductCategory.Alias)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.UpdatedDate)
            </td>
            <td class="ellipsis">
                @Html.DisplayFor(modelItem => item.UpdatedBy)
            </td>
            <td>
                        <button onclick="Edit(@item.ID)" class="btn btn-primary">Edit</button>
                                        
            </td>
            <td>
                    <button onclick="Delete(@item.ID)" class="btn btn-primary">Delete</button>
            </td>
        </tr>
}
    </tbody>
</table>

<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Product</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div id="form-edit">

            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Delete Product Category</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteForm" asp-action="Delete" method="post">
                <div class="modal-body">
                    Are you sure to delete this product ?

                  </div>  
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Confirm</button>
                </div>
                <input id="deleteId" type="hidden" name="id"/>
            </form>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {

        });

        //$('#selectrole').multipleSelect({
        //    selectAll: false,
        //    keepOpen: false,
        //    isOpen: false
        //});
        var Edit = function (id) {
            $.ajax({
                url: '@Url.Action("Edit", "Product")/' + id,
                type: 'GET'
            })
                .done(function (response) {
                    // Populate the modal form fields with the values from the JSON response
                    console.log(response)
                //    $('#update_Name').val(response.name);                    
                //    $('#update_Alias').val(response.alias);
                //    $('#update_CategoryID').val(response.categoryID);

                //   // $('#update_Image').val(response.image);
                //    $('#update_MoreImages').val(response.moreImages);
                //    $('#update_Price').val(response.price);

                //    $('#update_PromotionPrice').val(response.promotionPrice);
                //    $('#update_Description').val(response.description);
                //    $('#update_OriginalPrice').val(response.originalPrice);

                //    $('#update_Content').val(response.content);
                //    $('#update_HomeFlag').val(response.homeFlag);
                //    $('#update_HotFlag').val(response.hotFlag);

                //    $('#update_ViewCount').val(response.viewCount);
                //    $('#update_ListSelectedTags').val(response.listSelectedTags);
                //    $('#update_Quantity').val(response.quantity);

                //    $('#productId').val(response.id);
                //    $('#imagePreview').attr('src', '/uploads/' + response.image);
                ////    $('#imageFileName').text(response.image);
                    $('#form-edit').html(response);
                    $('#editModal').modal('show');
                })
                .fail(function (xhr, status, error) {
                    console.log(error);
                });
        }

        var Delete = function (id){
            $('#deleteModal').modal('show');
            $('#deleteId').val(id);
        }

    </script>
}

@{

    Func<int?, string> generateUrl = (int? _pagenumber) =>
    {
        return Url.Action("Index", "Product", new { pageNumber = _pagenumber });
    };

    var datapaging = new
    {
        currentPage = Model.PageNumber,
        countPages = Model.TotalPages,
        generateUrl = generateUrl
    };
}
<div class = "product-paging">
    <partial name="_Paging" model="@datapaging" />
</div>


